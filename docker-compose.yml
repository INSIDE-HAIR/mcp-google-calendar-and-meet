# Google Meet MCP Server v3.0 - Development Configuration
# Docker Compose for local development with hot reload and debugging
version: '3.8'

services:
  # ======================================================================
  # Main MCP Server - Development Mode
  # ======================================================================
  google-meet-mcp:
    build:
      context: .
      dockerfile: Dockerfile
      target: development  # Use development stage from multi-stage Dockerfile
    container_name: google-meet-mcp-dev
    restart: unless-stopped
    
    # Environment variables for development
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
      
      # Method 1: Direct token authentication (recommended)
      # Uncomment and set your real credentials:
      # - CLIENT_ID=your-client-id.apps.googleusercontent.com
      # - CLIENT_SECRET=GOCSPX-your-client-secret
      # - REFRESH_TOKEN=1//your-refresh-token
      
      # Method 2: File-based OAuth credentials (legacy)
      - G_OAUTH_CREDENTIALS=/app/credentials.json
      - GOOGLE_MEET_CREDENTIALS_PATH=/app/credentials.json
      - GOOGLE_MEET_TOKEN_PATH=/app/token.json
    
    # Volume mounts for development
    volumes:
      # Source code hot reload
      - ./src:/app/src:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      # Persistent credentials and tokens
      - ./credentials.json:/app/credentials.json:ro
      - ./token.json:/app/token.json:rw
      # Logs and data persistence
      - logs_dev:/app/logs
      - data_dev:/app/data
      # Development files
      - ./*.md:/app/*.md:ro
    
    # Network configuration
    ports:
      - "3000:3000"  # HTTP transport (if configured)
    
    # Development-specific settings
    stdin_open: true  # Keep STDIN open for interactive debugging
    tty: true        # Allocate a pseudo-TTY
    
    # Health check (disabled in development for faster startup)
    healthcheck:
      disable: true
    
    # Dependency management
    depends_on:
      - mongodb
    
    # Resource limits for development
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'

  # ======================================================================
  # MongoDB for Prisma (Optional - for Next.js integration)
  # ======================================================================
  mongodb:
    image: mongo:7-jammy
    container_name: google-meet-mongodb-dev
    restart: unless-stopped
    
    # MongoDB configuration
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=dev_password_123
      - MONGO_INITDB_DATABASE=google_meet_mcp
    
    # Data persistence
    volumes:
      - mongodb_data_dev:/data/db
      - mongodb_config_dev:/data/configdb
    
    # Network configuration
    ports:
      - "27017:27017"  # MongoDB port
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # ======================================================================
  # MongoDB Express (Optional - Web UI for database)
  # ======================================================================
  mongo-express:
    image: mongo-express:1-20-alpine3.19
    container_name: google-meet-mongo-express-dev
    restart: unless-stopped
    
    # MongoDB Express configuration
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=dev_password_123
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=dev_admin_123
    
    # Network configuration
    ports:
      - "8081:8081"  # Mongo Express web UI
    
    # Dependencies
    depends_on:
      - mongodb
    
    # Only run in development
    profiles:
      - debug

# ========================================================================
# Named Volumes for Data Persistence
# ========================================================================
volumes:
  # Application data
  logs_dev:
    driver: local
    name: google_meet_mcp_logs_dev
  data_dev:
    driver: local
    name: google_meet_mcp_data_dev
  
  # MongoDB data
  mongodb_data_dev:
    driver: local
    name: google_meet_mongodb_data_dev
  mongodb_config_dev:
    driver: local
    name: google_meet_mongodb_config_dev

# ========================================================================
# Network Configuration
# ========================================================================
networks:
  default:
    name: google_meet_mcp_dev
    driver: bridge