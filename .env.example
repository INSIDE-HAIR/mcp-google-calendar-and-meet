# Google Meet MCP Server v3.0 - Environment Configuration Example
# Copy this file to .env and configure your credentials

# ============================================================================
# Method 1: Direct Token Authentication (Recommended)
# ============================================================================
# Obtain these credentials from Google Cloud Console OAuth 2.0 setup
# Use the generate-refresh-token script: npm run generate-refresh-token

CLIENT_ID=your-client-id.apps.googleusercontent.com
CLIENT_SECRET=GOCSPX-your-client-secret
REFRESH_TOKEN=1//your-refresh-token

# ============================================================================
# Method 2: File-based OAuth Credentials (Legacy Support)
# ============================================================================
# Use this method if you prefer to manage credential files
# Uncomment if using file-based authentication:

# G_OAUTH_CREDENTIALS=/path/to/your/credentials.json
# GOOGLE_MEET_CREDENTIALS_PATH=/path/to/credentials.json
# GOOGLE_MEET_TOKEN_PATH=/path/to/token.json

# ============================================================================
# Application Configuration
# ============================================================================

# Environment mode
NODE_ENV=production

# Logging configuration
LOG_LEVEL=info

# Node.js optimizations
NODE_OPTIONS=--enable-source-maps --max-old-space-size=256

# ============================================================================
# Docker Configuration (for docker-compose)
# ============================================================================

# Use these variables in docker-compose.prod.yml:
# - CLIENT_ID=${CLIENT_ID}
# - CLIENT_SECRET=${CLIENT_SECRET}
# - REFRESH_TOKEN=${REFRESH_TOKEN}

# ============================================================================
# Security Notes
# ============================================================================
# - Never commit this file with real credentials to version control
# - Use Docker secrets or CI/CD variables for production deployments
# - Rotate refresh tokens periodically for security
# - Ensure proper access controls on credential files